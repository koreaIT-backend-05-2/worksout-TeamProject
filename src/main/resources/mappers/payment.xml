<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.project.worksout.domain.payment.PaymentRepositiory">
	<select id="getPaymentProductList" parameterType="hashmap" resultType="com.project.worksout.domain.cart.Cart">
	  	SELECT
			*
		FROM
		<choose>
				<when test=' payment_type.equals("cartType")' >
					(SELECT
						ROW_NUMBER() over(PARTITION BY pm.product_code ORDER BY pif.file_code) AS i,
						cm.user_code,
						cm.cart_code,
						cm.cart_amount,
						
						pm.product_price,
						pm.product_code,
						pm.product_group,
						pm.product_brand,
						pm.product_detail_name,
						pm.product_size,
						
						pif.file_name
						FROM
							cart_mst cm
							LEFT OUTER JOIN product_mst pm ON(pm.product_code = cm.product_code)
							LEFT OUTER JOIN user_mst um ON(um.user_code = cm.user_code)
							LEFT OUTER JOIN product_img_file pif ON(pif.product_group = pm.product_group)
						WHERE
							cm.pay_flag = 1 and
							cm.user_code = #{key_code}) pp
				</when>
				<when test=' payment_type.equals("productType")' >
					(SELECT
						ROW_NUMBER() over(PARTITION BY pm.product_group ORDER BY pif.file_code) AS i,
						
						pm.product_code,
						pm.product_group,
						pm.product_brand,
						pm.product_size,
						pm.product_price,
						pm.product_detail_name,
						
						pif.file_name
					FROM
						product_mst pm
						LEFT OUTER JOIN product_img_file pif ON(pif.product_group = pm.product_group)
					WHERE
						pm.product_group = #{key_code}) pp
				</when>
			</choose>
			where
				pp.i = 1;
	 </select>
  
	  
<!-- 	  <select id="getPaymentProductList" parameterType="hashmap" resultType="com.project.worksout.domain.cart.Cart"> -->
<!-- 	  	SELECT -->
<!-- 			* -->
<!-- 		FROM -->
<!-- 			(SELECT -->
<!-- 				ROW_NUMBER() over(PARTITION BY pm.product_code ORDER BY pif.file_code) AS i, -->
<!-- 				cm.user_code, -->
<!-- 				cm.cart_code, -->
<!-- 				cm.cart_amount, -->
<!-- 				cm.cart_price, -->
				
<!-- 				pm.product_code, -->
<!-- 				pm.product_group, -->
<!-- 				pm.product_brand, -->
<!-- 				pm.product_detail_name, -->
<!-- 				pm.product_size, -->
				
<!-- 				pif.file_name -->
<!-- 				FROM -->
<!-- 					cart_mst cm -->
<!-- 					LEFT OUTER JOIN product_mst pm ON(pm.product_code = cm.product_code) -->
<!-- 					LEFT OUTER JOIN user_mst um ON(um.user_code = cm.user_code) -->
<!-- 					LEFT OUTER JOIN product_img_file pif ON(pif.product_group = pm.product_group) -->
<!-- 				WHERE -->
<!-- 					cm.pay_flag = 1 and -->
<!-- 					cm.user_code = #{user_code}) pp -->
<!-- 		WHERE	 -->
<!-- 			pp.i = 1; -->
<!-- 	  </select> -->						
	  
	  <insert id="savePaymentProduct" parameterType="com.project.worksout.domain.payment.Payment"
	  	useGeneratedKeys="true"  keyProperty="payment_code">
	  	insert into
	  		payment_mst
	  	values
	  	<foreach collection="payment"  item="product" separator=",">
	  		(
	  			0,
	  			#{product.user_code},	
	  			#{product.product_group},
	  			#{product.product_code},
	  			#{product.cart_code},
	  			#{product.payment_request},
	  			now()
	  		)
	  	</foreach>
	  </insert>
  	
  		<insert id="savePaymentState" parameterType="com.project.worksout.domain.payment.Payment">
  			insert into
  				payment_state_mst
  			values
  			<foreach collection="payment"  item="state" separator=",">
  				(
  					#{state.payment_code},
  					0,
  					0
  				)
  			</foreach>;
  			
			insert into
				payment_state_dtl
			values
			<foreach collection="payment" item="state" separator=",">
				(
					#{state.payment_code},
					0,
					0,
					0,
					0,
					0
				)
			</foreach>
  		</insert>
  
  </mapper>
  
 